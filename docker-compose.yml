services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: products_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: products_api
      POSTGRES_USER: products_user
      POSTGRES_PASSWORD: products_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - products_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U products_user -d products_api"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Laravel API Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: products_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=products_api
      - DB_USERNAME=products_user
      - DB_PASSWORD=products_password
      - CACHE_STORE=database
      - SESSION_DRIVER=database
      - QUEUE_CONNECTION=sqs
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
      - ./storage/app:/var/www/html/storage/app
    ports:
      - "8000:80"
    networks:
      - products_network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: products_queue
    restart: unless-stopped
    depends_on:
      - postgres
      - app
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=products_api
      - DB_USERNAME=products_user
      - DB_PASSWORD=products_password
      - QUEUE_CONNECTION=sqs
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - products_network

  # Laravel Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: products_scheduler
    restart: unless-stopped
    depends_on:
      - postgres
      - app
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=products_api
      - DB_USERNAME=products_user
      - DB_PASSWORD=products_password
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    command: bash -c "while true; do php artisan schedule:run; sleep 60; done"
    networks:
      - products_network

volumes:
  postgres_data:
    driver: local

networks:
  products_network:
    driver: bridge